<style>
    .masonry-gallery-{{ section.id }} {
        margin: 0 auto;
        /* padding: 20px 0; */
    }

    .masonry-gallery__title-{{ section.id }} {
        text-align: center;
        margin-block: 20px;
    }

    .masonry-wrapper-{{ section.id }} {
        position: relative;
        width: 100%;
    }

    .masonry-sizer-{{ section.id }},
    .masonry-item-{{ section.id }} {
        width: calc(100% / {{ section.settings.columns_desktop }});
    }

    .masonry-gutter-{{ section.id }} {
        width: {{ section.settings.gap }}px;
    }

    .masonry-item-{{ section.id }} {
        position: relative;
        /* padding: {{ section.settings.gap | divided_by: 2 }}px; */
        box-sizing: border-box;
        /* margin-bottom: {{ section.settings.gap }}px; */
        cursor: pointer;
        overflow: hidden;
    }

    .masonry-item__inner-{{ section.id }} {
        position: relative;
        overflow: hidden;
        /* border-radius: 8px; */
        transition: transform 0.3s ease;
    }

    .masonry-item__inner-{{ section.id }}:hover {
        transform: scale(1.02);
    }

    .masonry-item-{{ section.id }} img {
        width: 100%;
        height: auto;
        display: block;
        /* border-radius: 8px; */
    }

    .video-container-{{ section.id }} {
        position: relative;
        width: 100%;
        /* border-radius: 8px; */
        overflow: hidden;
    }

    .video-cover-{{ section.id }} {
        width: 100%;
        height: auto;
        display: block;
        /* border-radius: 8px; */
    }

    .play-button-{{ section.id }} {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        background-color: rgba(0, 0, 0, 0.6);
        width: 60px;
        height: 60px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .play-button-{{ section.id }} svg {
        width: 24px;
        height: 24px;
        fill: white;
    }

    /* Modal styles */
    .gallery-modal-{{ section.id }} {
        display: none;
        position: fixed;
        z-index: 1000;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.8);
        backdrop-filter: blur(5px);
        overflow: auto;
        transition: opacity 0.3s ease;
        opacity: 0;
        align-items: center;
        justify-content: center;
    }

    .gallery-modal-{{ section.id }}.active {
        display: flex;
        opacity: 1;
    }

    .gallery-modal__content-{{ section.id }} {
        position: relative;
        max-width: 80%;
        max-height: 80vh;
        margin: auto;
    }

    .gallery-modal__close-{{ section.id }} {
        position: absolute;
        top: -40px;
        right: 0;
        color: white;
        background: transparent;
        border: none;
        font-size: 28px;
        cursor: pointer;
        z-index: 1001;
    }

    .gallery-modal__image-{{ section.id }} {
        max-width: 100%;
        max-height: 80vh;
        display: block;
        margin: 0 auto;
    }

    .gallery-modal__video-{{ section.id }} {
        width: 720px;
        max-width: 1000px;
        aspect-ratio: 16/9;
    }

    /* Navigation arrows */
    .gallery-modal__nav-{{ section.id }} {
        position: absolute;
        top: 50%;
        transform: translateY(-50%);
        color: white;
        background-color: rgba(0, 0, 0, 0.5);
        width: 50px;
        height: 50px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        z-index: 1001;
        transition: background-color 0.3s ease, opacity 0.3s ease;
        border: none;
    }

    .gallery-modal__nav-{{ section.id }}:hover {
        background-color: rgba(0, 0, 0, 0.8);
    }

    .gallery-modal__nav--prev-{{ section.id }} {
        left: 20px;
    }

    .gallery-modal__nav--next-{{ section.id }} {
        right: 20px;
    }

    .gallery-modal__nav-{{ section.id }} svg {
        width: 24px;
        height: 24px;
        fill: white;
    }
    
    @media screen and (max-width: 767px) {
    .masonry-sizer-{{ section.id }},
    .masonry-item-{{ section.id }} {
        width: calc(100% / {{ section.settings.columns_mobile }});
    }
    
    .gallery-modal__nav-{{ section.id }} {
        width: 40px;
        height: 40px;
    }
    
    .gallery-modal__nav--prev-{{ section.id }} {
        left: 10px;
    }
    
    .gallery-modal__nav--next-{{ section.id }} {
        right: 10px;
    }
    }
</style>
    
<div class="masonry-gallery-{{ section.id }}">
    {% if section.settings.title != blank %}
    <h2 class="masonry-gallery__title-{{ section.id }} h1">{{ section.settings.title }}</h2>
    {% endif %}
    
    <div class="masonry-wrapper-{{ section.id }}">
    <div class="masonry-sizer-{{ section.id }}"></div>
    <div class="masonry-gutter-{{ section.id }}"></div>
    
    {% for block in section.blocks %}
        {% case block.type %}
        {% when 'image' %}
            {% if block.settings.image != blank %}
            <div class="masonry-item-{{ section.id }}" {{ block.shopify_attributes }} data-index="{{ forloop.index0 }}" data-section-id="{{ section.id }}">
                <div class="masonry-item__inner-{{ section.id }}">
                <img 
                    src="{{ block.settings.image | img_url: 'master' }}" 
                    alt="{{ block.settings.alt | escape }}"
                    loading="lazy"
                    data-type="image"
                >
                </div>
            </div>
            {% endif %}
        
            {% when 'video' %}
                {% if block.settings.video_url != blank %}
                <div class="masonry-item-{{ section.id }}" {{ block.shopify_attributes }} data-index="{{ forloop.index0 }}" data-section-id="{{ section.id }}">
                    <div class="masonry-item__inner-{{ section.id }}">
                        <div class="video-container-{{ section.id }}">
                            <iframe 
                                width="100%" 
                                height="240px" 
                                src="{{ block.settings.video_url | replace: 'youtu.be/', 'www.youtube.com/embed/' }}" 
                                frameborder="0" 
                                allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" 
                                allowfullscreen>
                            </iframe>
                        </div>
                    </div>
                </div>
            {% endif %}
        {% endcase %}
    {% endfor %}
    </div>
</div>

<!-- Modal/Popup HTML -->
<div class="gallery-modal-{{ section.id }}">
    <button class="gallery-modal__close-{{ section.id }}">&times;</button>
    <button class="gallery-modal__nav-{{ section.id }} gallery-modal__nav--prev-{{ section.id }}">
        <svg viewBox="0 0 24 24">
            <path d="M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z"/>
        </svg>
    </button>
    <div class="gallery-modal__content-{{ section.id }}">
        <!-- Content will be inserted here dynamically -->
    </div>
    <button class="gallery-modal__nav-{{ section.id }} gallery-modal__nav--next-{{ section.id }}">
        <svg viewBox="0 0 24 24">
            <path d="M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z"/>
        </svg>
    </button>
</div>

{% if section.settings.enable_cdn_libraries %}
<script src="https://unpkg.com/masonry-layout@4.2.2/dist/masonry.pkgd.min.js"></script>
<script src="https://unpkg.com/imagesloaded@5.0.0/imagesloaded.pkgd.min.js"></script>
{% endif %}

<script>
    (function() {
        // Create a unique namespace for this section instance
        const sectionId = "{{ section.id }}";
        const masonryGallery = {};
        
        // Initialize the masonry gallery when the DOM is loaded
        document.addEventListener('DOMContentLoaded', function() {
            initMasonryGallery();
        });
        
        // Main initialization function
        function initMasonryGallery() {
            // Only initialize if required libraries are loaded
            if (typeof Masonry === 'undefined' || typeof imagesLoaded === 'undefined') {
                // If libraries aren't loaded yet, try to initialize again after a short delay
                const checkLibraries = setInterval(function() {
                    if (typeof Masonry !== 'undefined' && typeof imagesLoaded !== 'undefined') {
                        clearInterval(checkLibraries);
                        setupMasonry();
                    }
                }, 100);
                
                // Set a timeout to stop checking after 5 seconds
                setTimeout(function() {
                    clearInterval(checkLibraries);
                    console.error('Required libraries for Masonry Gallery could not be loaded');
                }, 5000);
            } else {
                setupMasonry();
            }
        }
        
        function setupMasonry() {
            // Initialize masonry layout when images are loaded
            const masonryWrapper = document.querySelector('.masonry-wrapper-{{ section.id }}');
            if (!masonryWrapper) return;
            
            // Initialize masonry
            masonryGallery.masonry = new Masonry(masonryWrapper, {
                itemSelector: '.masonry-item-{{ section.id }}',
                columnWidth: '.masonry-sizer-{{ section.id }}',
                gutter: '.masonry-gutter-{{ section.id }}',
                percentPosition: true
            });
            
            // Wait for images to load
            imagesLoaded(masonryWrapper).on('progress', function() {
                masonryGallery.masonry.layout();
            });
            
            setupModalFunctionality();
        }
        
        function setupModalFunctionality() {
            // Modal functionality
            const modal = document.querySelector('.gallery-modal-{{ section.id }}');
            const modalContent = document.querySelector('.gallery-modal__content-{{ section.id }}');
            const closeButton = document.querySelector('.gallery-modal__close-{{ section.id }}');
            const prevButton = document.querySelector('.gallery-modal__nav--prev-{{ section.id }}');
            const nextButton = document.querySelector('.gallery-modal__nav--next-{{ section.id }}');
            const galleryItems = document.querySelectorAll('.masonry-item-{{ section.id }}');
            
            let currentIndex = 0;
            
            // Open modal when clicking on a gallery item
            galleryItems.forEach(item => {
                item.addEventListener('click', function() {
                    if (item.dataset.sectionId === sectionId) {
                        currentIndex = parseInt(item.dataset.index);
                        openItemInModal(currentIndex);
                    }
                });
            });
            
            // Navigate to previous item
            prevButton.addEventListener('click', function(e) {
                e.stopPropagation();
                navigateGallery(-1);
            });
            
            // Navigate to next item
            nextButton.addEventListener('click', function(e) {
                e.stopPropagation();
                navigateGallery(1);
            });
            
            // Close modal when clicking the close button
            closeButton.addEventListener('click', closeModal);
            
            // Close modal when clicking outside the content
            modal.addEventListener('click', function(e) {
                if (e.target === modal) {
                    closeModal();
                }
            });
            
            // Close modal with ESC key and navigate with arrow keys
            document.addEventListener('keydown', function(e) {
                if (!modal.classList.contains('active')) return;
                
                if (e.key === 'Escape') {
                    closeModal();
                } else if (e.key === 'ArrowLeft') {
                    navigateGallery(-1);
                } else if (e.key === 'ArrowRight') {
                    navigateGallery(1);
                }
            });
            
            // Function to open specific item in modal
            function openItemInModal(index) {
                const items = Array.from(galleryItems).filter(item => item.dataset.sectionId === sectionId);
                const item = items[index];
                const videoContainer = item.querySelector('.video-container-{{ section.id }}');
                
                if (videoContainer) {
                    // It's a video
                    const iframe = videoContainer.querySelector('iframe');
                    let videoUrl = iframe.src;
                    
                    // Add autoplay parameter if it doesn't exist
                    if (videoUrl.indexOf('autoplay=') === -1) {
                        videoUrl += (videoUrl.indexOf('?') === -1 ? '?' : '&') + 'autoplay=1';
                    }
                    
                    modalContent.innerHTML = `
                        <iframe class="gallery-modal__video-{{ section.id }}" src="${videoUrl}" frameborder="0" allowfullscreen></iframe>
                    `;
                } else {
                    // It's an image
                    const img = item.querySelector('img');
                    const src = img.src;
                    const alt = img.alt;
                    
                    modalContent.innerHTML = `
                        <img class="gallery-modal__image-{{ section.id }}" src="${src}" alt="${alt}">
                    `;
                }
                
                modal.classList.add('active');
                document.body.style.overflow = 'hidden'; // Prevent scrolling of background
                
                // Update navigation visibility
                updateNavigation(items.length);
            }
            
            // Function to navigate through gallery items
            function navigateGallery(direction) {
                // Stop any playing videos
                const iframe = modalContent.querySelector('iframe');
                if (iframe) {
                    iframe.src = iframe.src.split('?')[0]; // Remove autoplay
                }
                
                const items = Array.from(galleryItems).filter(item => item.dataset.sectionId === sectionId);
                
                // Calculate new index
                currentIndex = (currentIndex + direction + items.length) % items.length;
                
                // Open the new item
                openItemInModal(currentIndex);
            }
            
            // Update navigation buttons based on current position
            function updateNavigation(itemCount) {
                prevButton.style.display = itemCount > 1 ? 'flex' : 'none';
                nextButton.style.display = itemCount > 1 ? 'flex' : 'none';
            }
            
            function closeModal() {
                modal.classList.remove('active');
                document.body.style.overflow = 'auto';
                
                // Clear iframe src to stop videos
                const iframe = modalContent.querySelector('iframe');
                if (iframe) {
                    iframe.src = '';
                }
                
                // Clear content after animation
                setTimeout(() => {
                    if (!modal.classList.contains('active')) {
                        modalContent.innerHTML = '';
                    }
                }, 300);
            }
        }
    })();
</script>

{% schema %}
    {
      "name": "Masonry Gallery",
      "tag": "section",
      "class": "section",
      "settings": [
        {
          "type": "text",
          "id": "title",
          "label": "Gallery Title",
          "default": "Our Gallery"
        },
        {
          "type": "select",
          "id": "columns_desktop",
          "label": "Columns on desktop",
          "options": [
            {
              "value": "2",
              "label": "2 columns"
            },
            {
              "value": "3",
              "label": "3 columns"
            },
            {
              "value": "4",
              "label": "4 columns"
            },
            {
              "value": "5",
              "label": "5 columns"
            },
            {
              "value": "6",
              "label": "6 columns"
            },
            {
              "value": "7",
              "label": "7 columns"
            },
            {
              "value": "8",
              "label": "8 columns"
            },
            {
              "value": "9",
              "label": "9 columns"
            },
            {
              "value": "10",
              "label": "10 columns"
            }
          ],
          "default": "3"
        },
        {
          "type": "select",
          "id": "columns_mobile",
          "label": "Columns on mobile",
          "options": [
            {
              "value": "1",
              "label": "1 column"
            },
            {
              "value": "2",
              "label": "2 columns"
            }
          ],
          "default": "1"
        },
        {
          "type": "range",
          "id": "gap",
          "min": 5,
          "max": 30,
          "step": 5,
          "unit": "px",
          "label": "Gap between items",
          "default": 15
        },
        {
          "type": "checkbox",
          "id": "enable_cdn_libraries",
          "label": "Load required libraries (disable if already loaded globally)",
          "default": true,
          "info": "Uncheck only if Masonry and imagesLoaded are already loaded in your theme"
        }
      ],
      "blocks": [
        {
          "type": "image",
          "name": "Image",
          "settings": [
            {
              "type": "image_picker",
              "id": "image",
              "label": "Image"
            },
            {
              "type": "text",
              "id": "alt",
              "label": "Alt Text",
              "default": "Gallery Image"
            }
          ]
        },
        {
          "type": "video",
          "name": "Video",
          "settings": [
            {
              "type": "video_url",
              "id": "video_url",
              "accept": ["youtube", "vimeo"],
              "label": "Video URL",
              "placeholder": "https://www.youtube.com/watch?v=_9VUPq3SxOc"
            },
            {
              "type": "image_picker",
              "id": "cover_image",
              "label": "Cover Image"
            }
          ]
        }
      ],
      "presets": [
        {
          "name": "Masonry Gallery",
          "blocks": [
            {
              "type": "image"
            },
            {
              "type": "image"
            },
            {
              "type": "image"
            },
            {
              "type": "image"
            }
          ]
        }
      ]
    }
{% endschema %}